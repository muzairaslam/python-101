---
title: "Introduction to Python"
subtitle: Week 2
format: revealjs
---

## Last Week (Recap)

::: {.incremental}

- `print()` tells the program to display words or numbers on the screen.
- Defined three data types in Python: `int`, `string`, `float`
- Assigned variables to numbers
- Assigned variables to strings
- Math Expressions in Python
:::

## Last Week (Recap)

::: {.incremental}

- We can assigned variable to numbers

```{python}

#| echo: true
#| output-location: fragment

weight = 150
print(weight)

```

- And to Strings

```{python}
#| echo: true
#| output-location: fragment

name = "Uzair"
print(name)

```

:::

## Last Week (Recap)

Familiar operators in math expressions are 

- `+` (add), `-` (subtract) , `*` (multiply) , `/` (divide).
- Quick quiz! 

```{python}
#| echo: true
#| output-location: fragment

number = 4
popular_number_add = number + 4
popular_number_sub = number - 4
popular_number_mult = number * 4
popular_number_divide = number / 4
# print(popular_number_add)
# print(popular_number_sub)
# print(popular_number_mult)
print(popular_number_divide)
print(type(popular_number_divide))
```

## This week

- Floor division
- Modulus Operator
- Order of precedence
- Boolean expressions, logical operators



## Floor Division

:::{.incremental}

- In Python, we use `//` as floor division

- This is also known as integer division

- This operator will divide the first argument by the second argument.

- Then  **round** the result down to the nearest whole number

- It is equivalent to the `math.floor()` function.

:::

## Example 1

```{python}
#| echo: true
#| output-location: fragment

# Floor Divide
print(15 // 4)
```

## Example 2

```{python}
#| echo: true
#| output-location: fragment

import math

math.floor(3.75)
```


## Modulo Operator

:::{.incremental}

- `%` is the modulo operator

- It divides one number by another number, but doesn't give you the result of the division.

- It gives you the remainder after the first number is divided by the second number.

- What is the remainder when you divide 10 by 3 ?

:::

## Example 


```{python}
#| echo: true
#| output-location: fragment

whats_left = 10 % 3
print(whats_left)
```

## Some unfamiliar operators

- Suppose you want to increase the value of a variable by 1. You could write


```{python}
#| echo: true
#| output-location: fragment
age = 54
age = age + 1
print(age)
```

- The statement increases the value of the variable `age` by 1.
- If the variable started off with a value of 54, it now has a value of 55.

## Shorthand wayâ€¦


```{python}
#| echo: true
#| output-location: fragment

age = 54
age += 1
print(age)
```

You can use the same kind of shorthand for other operators too.

```{python}
#| echo: true
#| output-location: fragment

age = 54
age /= 2
print(age)
```

## Don't forget to soft code


```{python}
#| echo: true
#| output-location: fragment
age = 12
amount_to_increment = 3
age += amount_to_increment

print(age)
```

## Let's get hands on !

<http://www.asmarterwaytolearn.com/python/6.html>

## Order of Precedence

Precedence Rules in Python are:

1. Parentheses First
2. Division
3. Multipication'
4. Addition
5. Subtraction


## What's the difference ? 

```{python}
#| echo: true
#| output-location: fragment

total_cost = 1 + (3 * 4)
print(total_cost)
```


```{python}
#| echo: true
#| output-location: fragment

total_cost = (1 + 3) * 4
print(total_cost)
```


## Another example

```{python}
#| echo: true
#| output-location: fragment

result_of_computation = ((2 * 4) * 4) + 2
print(result_of_computation)
```

```{python}
#| echo: true
#| output-location: fragment

result_of_computation = (2 * 4) * (4 + 2)
print(result_of_computation)
```


## Boolean Expressions

:::{.incremental}

- `True` and `False` are known as Boolean.

- A Boolean expression is an expression that evaluates to produce a result which is a Boolean value. 

- For example, the operator `==` tests if two values are equal. 

- It produces (or yields) a Boolean value

:::

## Examples

```{python}
#| echo: true
#| output-location: fragment

print(5 == (3 + 2)) 
print(5 == 6)
print(5 != 6)
print(5 > 6)
print (6 < 5)
print(5 >= 5 )
print (5 <= 5 )

```



## Let's get hands on! 

<http://www.asmarterwaytolearn.com/python/7.html>
<http://www.asmarterwaytolearn.com/python/10.html>

## If, Elif, Else Statements

```{python}
#| echo: true
#| output-location: fragment

buy_score = 0
donut_condition = "not fresh"
donut_price = "low"

if donut_condition == "fresh":
  buy_score = 10
elif donut_price == "low":
  buy_score = 5
else:
  buy_score = 0

print(buy_score)
```

- `==` is the comparison operator.


## Hands on Exercise

<http://www.asmarterwaytolearn.com/python/11.html>

## Testing Set of Conditions

- We have learnt how to test a set of conditions
- Now we will learn how to test a set of conditions

## Example

:::{.incremental}

- How to write this in Python ?

 *A guy weighs more than 300 pounds **and** runs 40 yards in under 6 seconds,
 we will give him a chance to recruit.*

```{python}

#| echo: true
#| output-location: fragment

if weight > 300 and time < 6:
    status = "try to recruit him"
```


- How to add a further **or** condition that *he should be under 18 ?*

```{python}

#| echo: true
#| output-location: fragment

if (weight > 300 and time < 6) or age < 18:
    status = "try to recruit him"
```

:::


## Let's get hands on!

<http://www.asmarterwaytolearn.com/python/12.html>


## If statements nested

```{python}
#| echo: true
#| output-location: fragment

# intializations
a = 3
b = 2
c = 0
d = 0
e = 7
f = 4
g = 3
h = 2
x = 5
y = 6

# nested if statements
if c == d:
    if x == y:
        g = h
    elif a == b:
        g = h
    else:
        e = f
else:
    x = y

print(e)

```


## Let's get hands on!

<http://www.asmarterwaytolearn.com/python/13.html>


# Thank you! 